{"version":3,"sources":["MentionsTagsComponent.js","Modals.jsx","App.js","serviceWorker.js","index.js"],"names":["MentionsTagsComponent","title","type","value","setValue","onSelect","usersList","val","res","substring","length","justify","className","span","placeholder","onChange","prefix","defaultValue","map","hashtag","key","Option","Modals","width","visible","state","previewPublicationModal","onCancel","setState","footer","icon","onClick","updatePic","deletePic","align","xs","md","src","profileData","posts","previewItem","imageUrl","height","alt","description","grid","gutter","column","dataSource","hashtags","renderItem","tag","Item","mentions","user","okText","uploadModal","onOk","uploadPicture","id","e","target","updateMentions","updateHashtags","editProfilModal","updateProfile","email","firstname","lastname","phoneNumber","App","editPublicationModal","username","createdAt","profilePicture","formatDate","bind","date","newDate","Date","getDate","getMonth","getFullYear","postNumber","this","alert","tmp","message","success","style","margin","sm","bordered","size","openPreview","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.18f201c0.chunk.js","sourcesContent":["import React from 'react';\nimport { Col, Mentions, Row } from 'antd/es';\n\n\nconst MentionsTagsComponent = ({\n\ttitle, type, value, setValue, usersList\n}) => {\n\tconst onSelect = (val) => {\n\t\tconst res = val.substring(0, val.length - 1);\n\t\tsetValue(res);\n\t};\n\n\tconst hashtagsExample = ['THP', 'TheHackingProject', '2020', 'ReactJS'];\n\n\treturn (\n\t\t<Row type=\"flex\" justify=\"center\" className=\"input-container\">\n\t\t\t<Col span={20}>\n\t\t\t\t<b>{title}</b>\n\t\t\t\t{type === 'mentions' && (\n\t\t\t\t\t<Mentions\n\t\t\t\t\t\tplaceholder=\"Add space between users\"\n\t\t\t\t\t\tonChange={(value) => onSelect(value)}\n\t\t\t\t\t>\n\t\t\t\t\t</Mentions>\n\t\t\t\t)}\n\t\t\t\t{type === 'tags' && (\n\t\t\t\t\t<Mentions\n\t\t\t\t\t\tplaceholder=\"input # to write hashtags\"\n\t\t\t\t\t\tprefix=\"#\"\n\t\t\t\t\t\tdefaultValue={value || '#'}\n\t\t\t\t\t\tonChange={(value) => onSelect(value)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{hashtagsExample.map((hashtag, key) => (\n\t\t\t\t\t\t\t<Mentions.Option key={key} value={hashtag}>{`#${hashtag}`}</Mentions.Option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Mentions>\n\t\t\t\t)}\n\t\t\t</Col>\n\t\t</Row>\n\t);\n};\n\nexport default MentionsTagsComponent;","import React from 'react';\nimport { Button, Col, Row, Modal, List, Tag, Input } from 'antd/es';\nimport MentionsTagsComponent from './MentionsTagsComponent';\n\n\nconst Modals = () => {\n  return (\n    <>\n      <Modal width={520} visible={this.state.previewPublicationModal} onCancel={() => this.setState({ previewPublicationModal: false })}\n        footer={\n        <Row type=\"flex\">\n          <Col span={12} className=\"text-center\">\n            <Button type=\"ghost\" icon=\"edit\" onClick={this.updatePic}>Edit</Button>\n          </Col>\n          <Col span={12} className=\"text-center\">\n            <Button type=\"danger\" icon=\"delete\" onClick={this.deletePic}>Delete</Button>\n          </Col>\n        </Row>}\n      >\n        <Row type=\"flex\" align=\"middle\">\n          <Col xs={24} md={12} className=\"text-center\">\n            <img src={this.state.profileData.posts[this.state.previewItem].imageUrl} width={200} height={200} alt={this.state.profileData.posts[this.state.previewItem].description} />\n          </Col>\n          <Col xs={24} md={12}>\n            <div>\n              <b>Description: </b>\n              <p>{this.state.profileData.posts[this.state.previewItem].description}</p>\n            </div>\n            <div>\n              <b>Hashtag:</b>\n              <List\n                grid={{ gutter: 16, column: 2 }}\n                dataSource={this.state.profileData.posts[this.state.previewItem].hashtags}\n                renderItem={(tag) => (\n                  <List.Item>\n                    <Tag>{`${tag}`}</Tag>\n                  </List.Item>\n                )}\n              />\n            </div>\n            <div>\n              <b>Mention:</b>\n              <List\n                grid={{ gutter: 16, column: 2 }}\n                dataSource={this.state.profileData.posts[this.state.previewItem].mentions}\n                renderItem={(user) => (\n                  <List.Item>\n                    <Tag>{`@${user}`}</Tag>\n                  </List.Item>\n                )}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Modal>\n      <Modal title=\"Upload a picture\" okText=\"Upload\" visible={this.state.uploadModal} onOk={this.uploadPicture} onCancel={() => this.setState({ uploadModal: false })}>\n        <Row type=\"flex\" justify=\"center\" className=\"input-container\">\n          <Col span={20}>\n            <b>Description:</b>\n            <Input id=\"description\" title=\"Description\" type=\"text\" value={this.state.description} onChange={(e) => this.setState({ description: e.target.value })} />\n          </Col>\n        </Row>\n        <MentionsTagsComponent type=\"mentions\" value={this.state.mentions} title=\"Mention a user\" setValue={this.updateMentions} />\n        <MentionsTagsComponent type=\"tags\" value={this.state.hashtags} title=\"Hashtags\" setValue={this.updateHashtags} />\n      </Modal>\n      <Modal title=\"Edit your account\" okText=\"Update\" visible={this.state.editProfilModal} onOk={this.updateProfile} onCancel={() => this.setState({ editProfilModal: false })}>\n        <Row type=\"flex\" justify=\"center\" className=\"input-container\">\n          <Col span={20}>\n            <b>EMail</b>\n            <Input id=\"email\" type=\"text\" value={this.state.email} onChange={(e) => this.setState({ email: e.target.value })} />\n          </Col>\n        </Row>\n        <Row type=\"flex\" justify=\"center\" className=\"input-container\">\n          <Col span={20}>\n            <b>Firstname</b>\n            <Input id=\"firstname\" type=\"text\" value={this.state.firstname} onChange={(e) => this.setState({ firstname: e.target.value })} />\n          </Col>\n        </Row>\n        <Row type=\"flex\" justify=\"center\" className=\"input-container\">\n          <Col span={20}>\n            <b>Lastname</b>\n            <Input id=\"lastname\" type=\"text\" value={this.state.lastname} onChange={(e) => this.setState({ lastname: e.target.value })} />\n          </Col>\n        </Row>\n        <Row type=\"flex\" justify=\"center\" className=\"input-container\">\n          <Col span={20}>\n            <b>Phone number</b>\n            <Input id=\"email\" type=\"text\" value={this.state.phoneNumber} onChange={(e) => this.setState({ phoneNumber: e.target.value })} />\n          </Col>\n        </Row>\n      </Modal>\n    </>\n  );\n};\n\nexport default Modals;","// Kata written by Matthieu BRAULT for the next-react formation from TheHackingProject\nimport React, { Component } from 'react';\nimport { Avatar, Button, Card, Col, Icon, Row, message } from 'antd/es';\nimport Modals from './Modals';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      editProfilModal: false,\n      editPublicationModal: false,\n      previewPublicationModal: false,\n      previewItem: 0,\n      uploadModal: false,\n      description: '',\n      hashtags: '',\n      mentions: '',\n      email: 'myprofile@thp.fr',\n      phoneNumber: '0601020304',\n      firstname: 'TheHacking',\n      lastname: 'Project',\n      profileData: {\n        username: 'RefactoProject',\n        email: 'myprofile@thp.fr',\n        phoneNumber: '0601020304',\n        createdAt: '2020-02-23T07:50:17.335Z',\n        firstname: 'TheHacking',\n        lastname: 'Project',\n        profilePicture: 'https://blog.thehackingproject.org/wp-content/uploads/2019/03/short_white-1.png',\n        posts: [\n          {\n            imageUrl: 'https://f1.pngfuel.com/png/951/574/485/react-logo-javascript-redux-vuejs-angular-angularjs-expressjs-front-and-back-ends-png-clip-art.png',\n            description: 'This is a Javascript logo',\n            hashtags: ['#Javascript', '#reactJS'],\n            mentions: ['TheHackingProject'],\n            id: 1,\n          },\n          {\n            imageUrl: 'https://www.tuannguyen.tech/wp-content/uploads/2019/01/react.png',\n            description: 'This is the React logo',\n            hashtags: ['#React', '#formation'],\n            mentions: ['THP'],\n            id: 2,\n          },\n          {\n            imageUrl: 'https://avatars2.githubusercontent.com/u/25484553?s=200&v=4',\n            description: 'The Hacking Project logo',\n            hashtags: ['#THP', '#TheHackingProject'],\n            mentions: ['youhou', 'week7'],\n            id: 3,\n          }\n        ]\n      }\n    }\n    this.formatDate = this.formatDate.bind(this);\n    this.deletePic = this.deletePic.bind(this);\n    this.updatePic = this.updatePic.bind(this);\n    this.uploadPicture = this.uploadPicture.bind(this);\n    this.updateHashtags = this.updateHashtags.bind(this);\n    this.updateMentions = this.updateMentions.bind(this);\n    this.updateProfile = this.updateProfile.bind(this);\n  }\n\n  formatDate(date) {\n    const newDate = new Date(date);\n    return `${newDate.getDate()}/${newDate.getMonth() + 1}/${newDate.getFullYear()}`;\n  }\n\n  openPreview(postNumber) {\n    this.setState({\n      previewItem: postNumber,\n      previewPublicationModal: true,\n    });\n  }\n\n  updatePic() {\n    alert(\"J'update la publcation avec l'id : \" + this.state.profileData.posts[this.state.previewItem].id);\n  }\n\n  deletePic() {\n    alert(\"Je supprime la publcation avec l'id : \" + this.state.profileData.posts[this.state.previewItem].id);\n  }\n\n  uploadPicture() {\n    alert(\"J'upload une image avec la description : \" + this.state.description + \" et les hashtags \" + this.state.hashtags + \" et les mentions \" + this.state.mentions);\n  }\n\n  updateMentions(value) {\n    this.setState({ mentions: value });\n  }\n\n  updateHashtags(value) {\n    this.setState({ hashtags: value })\n  }\n\n  updateProfile() {\n    let tmp = this.state.profileData;\n    tmp.email = this.state.email;\n    tmp.firstname = this.state.firstname;\n    tmp.lastname = this.state.lastname;\n    tmp.phoneNumber = this.state.phoneNumber;\n    this.setState({ profileData: tmp, editProfilModal: false });\n    message.success('Profile well updated', 3);\n  }\n\n  render() {\n    return (\n      <div style={{ margin: 50 }}>\n        <Modals />\n        <Row type=\"flex\" align=\"middle\" justify=\"center\">\n          <Col sm={16} xs={24}>\n            <Card bordered>\n              <Row type=\"flex\" align=\"middle\" justify=\"center\">\n                <Col md={14} sm={16} xs={24}>\n                  <Row type=\"flex\" justify=\"space-between\">\n                    <Col span={10} className=\"text-center\">\n                      <Avatar size={100} icon=\"user\" className=\"profil-pic\" src={this.state.profileData.profilePicture} />\n                      <h3>{`${this.state.profileData.firstname} ${this.state.profileData.lastname}`}</h3>\n                    </Col>\n                    <Col span={10}>\n                      <p>\n                        <Icon type=\"user\" className=\"p-icon\" />\n                        {this.state.profileData.username}\n                      </p>\n                      <p>\n                        <Icon type=\"mail\" className=\"p-icon\" />\n                        {this.state.profileData.email}\n                      </p>\n                      <p>\n                        <Icon type=\"phone\" className=\"p-icon\" />\n                        {this.state.profileData.phoneNumber}\n                      </p>\n                      <p>\n                        <Icon type=\"calendar\" className=\"p-icon\" />\n                        {this.formatDate(this.state.profileData.createdAt)}\n                      </p>\n                    </Col>\n                  </Row>\n                </Col>\n                <Col md={10} sm={16} xs={24} className=\"text-center\">\n                  <Button type=\"ghost\" icon=\"setting\" onClick={() => this.setState({ editProfilModal: true })}>Edit account</Button>\n                  <br />\n                  <br />\n                  <Button type=\"ghost\" icon=\"upload\" onClick={() => this.setState({ uploadModal: true })}>Upload a picture</Button>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n        <Row type=\"flex\" justify=\"center\">\n          <Col sm={18} xs={24}>\n            <Col span={24} className=\"container text-center\">\n              <h2>\n                <Icon type=\"save\" />\n                <span className=\"span-icon\">Publications</span>\n              </h2>\n              <Card bordered className=\"card-pubs\" onClick={() => this.openPreview(0)}>\n                <img src={this.state.profileData.posts[0].imageUrl} width={200} height={200} alt={this.state.profileData.posts[0].imageUrl} />\n              </Card>\n              <Card bordered className=\"card-pubs\" onClick={() => this.openPreview(1)}>\n                <img src={this.state.profileData.posts[1].imageUrl} width={200} height={200} alt={this.state.profileData.posts[1].imageUrl} />\n              </Card>\n              <Card bordered className=\"card-pubs\" onClick={() => this.openPreview(2)}>\n                <img src={this.state.profileData.posts[2].imageUrl} width={200} height={200} alt={this.state.profileData.posts[2].imageUrl} />\n              </Card>\n            </Col>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}