{"version":3,"sources":["MentionsTagsComponent.js","App.js","serviceWorker.js","index.js"],"names":["MentionsTagsComponent","title","type","value","setValue","onSelect","usersList","val","res","substring","length","justify","className","span","placeholder","onChange","prefix","defaultValue","map","hashtag","key","Option","App","state","editProfilModal","editPublicationModal","previewPublicationModal","previewItem","uploadModal","description","hashtags","mentions","email","phoneNumber","firstname","lastname","profileData","username","createdAt","profilePicture","posts","imageUrl","id","formatDate","bind","deletePic","updatePic","uploadPicture","updateHashtags","updateMentions","updateProfile","date","newDate","Date","getDate","getMonth","getFullYear","postNumber","this","setState","alert","tmp","message","success","style","margin","width","visible","onCancel","footer","icon","onClick","align","xs","md","src","height","alt","grid","gutter","column","dataSource","renderItem","tag","Item","user","okText","onOk","e","target","sm","bordered","size","openPreview","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.78c3b6ac.chunk.js","sourcesContent":["import React from 'react';\nimport { Col, Mentions, Row } from 'antd/es';\n\n\nconst MentionsTagsComponent = ({\n\ttitle, type, value, setValue, usersList\n}) => {\n\tconst onSelect = (val) => {\n\t\tconst res = val.substring(0, val.length - 1);\n\t\tsetValue(res);\n\t};\n\n\tconst hashtagsExample = ['THP', 'TheHackingProject', '2020', 'ReactJS'];\n\n\treturn (\n\t\t<Row type=\"flex\" justify=\"center\" className=\"input-container\">\n\t\t\t<Col span={20}>\n\t\t\t\t<b>{title}</b>\n\t\t\t\t{type === 'mentions' && (\n\t\t\t\t\t<Mentions\n\t\t\t\t\t\tplaceholder=\"Add space between users\"\n\t\t\t\t\t\tonChange={(value) => onSelect(value)}\n\t\t\t\t\t>\n\t\t\t\t\t</Mentions>\n\t\t\t\t)}\n\t\t\t\t{type === 'tags' && (\n\t\t\t\t\t<Mentions\n\t\t\t\t\t\tplaceholder=\"input # to write hashtags\"\n\t\t\t\t\t\tprefix=\"#\"\n\t\t\t\t\t\tdefaultValue={value || '#'}\n\t\t\t\t\t\tonChange={(value) => onSelect(value)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{hashtagsExample.map((hashtag, key) => (\n\t\t\t\t\t\t\t<Mentions.Option key={key} value={hashtag}>{`#${hashtag}`}</Mentions.Option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Mentions>\n\t\t\t\t)}\n\t\t\t</Col>\n\t\t</Row>\n\t);\n};\n\nexport default MentionsTagsComponent;","// Kata written by Matthieu BRAULT for the next-react formation from TheHackingProject\nimport React, { Component } from 'react';\nimport { Avatar, Button, Card, Col, Icon, Row, Modal, List, Tag, Input, message } from 'antd/es';\nimport MentionsTagsComponent from './MentionsTagsComponent';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      editProfilModal: false,\n      editPublicationModal: false,\n      previewPublicationModal: false,\n      previewItem: 0,\n      uploadModal: false,\n      description: '',\n      hashtags: '',\n      mentions: '',\n      email: 'myprofile@thp.fr',\n      phoneNumber: '0601020304',\n      firstname: 'TheHacking',\n      lastname: 'Project',\n      profileData: {\n        username: 'RefactoProject',\n        email: 'myprofile@thp.fr',\n        phoneNumber: '0601020304',\n        createdAt: '2020-02-23T07:50:17.335Z',\n        firstname: 'TheHacking',\n        lastname: 'Project',\n        profilePicture: 'https://blog.thehackingproject.org/wp-content/uploads/2019/03/short_white-1.png',\n        posts: [\n          {\n            imageUrl: 'https://f1.pngfuel.com/png/951/574/485/react-logo-javascript-redux-vuejs-angular-angularjs-expressjs-front-and-back-ends-png-clip-art.png',\n            description: 'This is a Javascript logo',\n            hashtags: ['#Javascript', '#reactJS'],\n            mentions: ['TheHackingProject'],\n            id: 1,\n          },\n          {\n            imageUrl: 'https://www.tuannguyen.tech/wp-content/uploads/2019/01/react.png',\n            description: 'This is the React logo',\n            hashtags: ['#React', '#formation'],\n            mentions: ['THP'],\n            id: 2,\n          },\n          {\n            imageUrl: 'https://avatars2.githubusercontent.com/u/25484553?s=200&v=4',\n            description: 'The Hacking Project logo',\n            hashtags: ['#THP', '#TheHackingProject'],\n            mentions: ['youhou', 'week7'],\n            id: 3,\n          }\n        ]\n      }\n    }\n    this.formatDate = this.formatDate.bind(this);\n    this.deletePic = this.deletePic.bind(this);\n    this.updatePic = this.updatePic.bind(this);\n    this.uploadPicture = this.uploadPicture.bind(this);\n    this.updateHashtags = this.updateHashtags.bind(this);\n    this.updateMentions = this.updateMentions.bind(this);\n    this.updateProfile = this.updateProfile.bind(this);\n  }\n\n  formatDate(date) {\n    const newDate = new Date(date);\n    return `${newDate.getDate()}/${newDate.getMonth() + 1}/${newDate.getFullYear()}`;\n  }\n\n  openPreview(postNumber) {\n    this.setState({\n      previewItem: postNumber,\n      previewPublicationModal: true,\n    });\n  }\n\n  updatePic() {\n    alert(\"J'update la publcation avec l'id : \" + this.state.profileData.posts[this.state.previewItem].id);\n  }\n\n  deletePic() {\n    alert(\"Je supprime la publcation avec l'id : \" + this.state.profileData.posts[this.state.previewItem].id);\n  }\n\n  uploadPicture() {\n    alert(\"J'upload une image avec la description : \" + this.state.description + \" et les hashtags \" + this.state.hashtags + \" et les mentions \" + this.state.mentions);\n  }\n\n  updateMentions(value) {\n    this.setState({ mentions: value });\n  }\n\n  updateHashtags(value) {\n    this.setState({ hashtags: value })\n  }\n\n  updateProfile() {\n    let tmp = this.state.profileData;\n    tmp.email = this.state.email;\n    tmp.firstname = this.state.firstname;\n    tmp.lastname = this.state.lastname;\n    tmp.phoneNumber = this.state.phoneNumber;\n    this.setState({ profileData: tmp, editProfilModal: false });\n    message.success('Profile well updated', 3);\n  }\n\n  render() {\n    return (\n      <div style={{ margin: 50 }}>\n        <Modal width={520} visible={this.state.previewPublicationModal} onCancel={() => this.setState({ previewPublicationModal: false })}\n          footer={<Row type=\"flex\">\n            <Col span={12} className=\"text-center\">\n              <Button type=\"ghost\" icon=\"edit\" onClick={this.updatePic}>Edit</Button>\n            </Col>\n            <Col span={12} className=\"text-center\">\n              <Button type=\"danger\" icon=\"delete\" onClick={this.deletePic}>Delete</Button>\n            </Col>\n          </Row>}\n        >\n          <Row type=\"flex\" align=\"middle\">\n            <Col xs={24} md={12} className=\"text-center\">\n              <img src={this.state.profileData.posts[this.state.previewItem].imageUrl} width={200} height={200} alt={this.state.profileData.posts[this.state.previewItem].description} />\n            </Col>\n            <Col xs={24} md={12}>\n              <div>\n                <b>Description: </b>\n                <p>{this.state.profileData.posts[this.state.previewItem].description}</p>\n              </div>\n              <div>\n                <b>Hashtag:</b>\n                <List\n                  grid={{ gutter: 16, column: 2 }}\n                  dataSource={this.state.profileData.posts[this.state.previewItem].hashtags}\n                  renderItem={(tag) => (\n                    <List.Item>\n                      <Tag>{`${tag}`}</Tag>\n                    </List.Item>\n                  )}\n                />\n              </div>\n              <div>\n                <b>Mention:</b>\n                <List\n                  grid={{ gutter: 16, column: 2 }}\n                  dataSource={this.state.profileData.posts[this.state.previewItem].mentions}\n                  renderItem={(user) => (\n                    <List.Item>\n                      <Tag>{`@${user}`}</Tag>\n                    </List.Item>\n                  )}\n                />\n              </div>\n            </Col>\n          </Row>\n        </Modal>\n        <Modal title=\"Upload a picture\" okText=\"Upload\" visible={this.state.uploadModal} onOk={this.uploadPicture} onCancel={() => this.setState({ uploadModal: false })}>\n          <Row type=\"flex\" justify=\"center\" className=\"input-container\">\n            <Col span={20}>\n              <b>Description:</b>\n              <Input id=\"description\" title=\"Description\" type=\"text\" value={this.state.description} onChange={(e) => this.setState({ description: e.target.value })} />\n            </Col>\n          </Row>\n          <MentionsTagsComponent type=\"mentions\" value={this.state.mentions} title=\"Mention a user\" setValue={this.updateMentions} />\n          <MentionsTagsComponent type=\"tags\" value={this.state.hashtags} title=\"Hashtags\" setValue={this.updateHashtags} />\n        </Modal>\n        <Modal title=\"Edit your account\" okText=\"Update\" visible={this.state.editProfilModal} onOk={this.updateProfile} onCancel={() => this.setState({ editProfilModal: false })}>\n          <Row type=\"flex\" justify=\"center\" className=\"input-container\">\n            <Col span={20}>\n              <b>EMail</b>\n              <Input id=\"email\" type=\"text\" value={this.state.email} onChange={(e) => this.setState({ email: e.target.value })} />\n            </Col>\n          </Row>\n          <Row type=\"flex\" justify=\"center\" className=\"input-container\">\n            <Col span={20}>\n              <b>Firstname</b>\n              <Input id=\"firstname\" type=\"text\" value={this.state.firstname} onChange={(e) => this.setState({ firstname: e.target.value })} />\n            </Col>\n          </Row>\n          <Row type=\"flex\" justify=\"center\" className=\"input-container\">\n            <Col span={20}>\n              <b>Lastname</b>\n              <Input id=\"lastname\" type=\"text\" value={this.state.lastname} onChange={(e) => this.setState({ lastname: e.target.value })} />\n            </Col>\n          </Row>\n          <Row type=\"flex\" justify=\"center\" className=\"input-container\">\n            <Col span={20}>\n              <b>Phone number</b>\n              <Input id=\"email\" type=\"text\" value={this.state.phoneNumber} onChange={(e) => this.setState({ phoneNumber: e.target.value })} />\n            </Col>\n          </Row>\n        </Modal>\n        <Row type=\"flex\" align=\"middle\" justify=\"center\">\n          <Col sm={16} xs={24}>\n            <Card bordered>\n              <Row type=\"flex\" align=\"middle\" justify=\"center\">\n                <Col md={14} sm={16} xs={24}>\n                  <Row type=\"flex\" justify=\"space-between\">\n                    <Col span={10} className=\"text-center\">\n                      <Avatar size={100} icon=\"user\" className=\"profil-pic\" src={this.state.profileData.profilePicture} />\n                      <h3>{`${this.state.profileData.firstname} ${this.state.profileData.lastname}`}</h3>\n                    </Col>\n                    <Col span={10}>\n                      <p>\n                        <Icon type=\"user\" className=\"p-icon\" />\n                        {this.state.profileData.username}\n                      </p>\n                      <p>\n                        <Icon type=\"mail\" className=\"p-icon\" />\n                        {this.state.profileData.email}\n                      </p>\n                      <p>\n                        <Icon type=\"phone\" className=\"p-icon\" />\n                        {this.state.profileData.phoneNumber}\n                      </p>\n                      <p>\n                        <Icon type=\"calendar\" className=\"p-icon\" />\n                        {this.formatDate(this.state.profileData.createdAt)}\n                      </p>\n                    </Col>\n                  </Row>\n                </Col>\n                <Col md={10} sm={16} xs={24} className=\"text-center\">\n                  <Button type=\"ghost\" icon=\"setting\" onClick={() => this.setState({ editProfilModal: true })}>Edit account</Button>\n                  <br />\n                  <br />\n                  <Button type=\"ghost\" icon=\"upload\" onClick={() => this.setState({ uploadModal: true })}>Upload a picture</Button>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n        <Row type=\"flex\" justify=\"center\">\n          <Col sm={18} xs={24}>\n            <Col span={24} className=\"container text-center\">\n              <h2>\n                <Icon type=\"save\" />\n                <span className=\"span-icon\">Publications</span>\n              </h2>\n              <Card bordered className=\"card-pubs\" onClick={() => this.openPreview(0)}>\n                <img src={this.state.profileData.posts[0].imageUrl} width={200} height={200} alt={this.state.profileData.posts[0].imageUrl} />\n              </Card>\n              <Card bordered className=\"card-pubs\" onClick={() => this.openPreview(1)}>\n                <img src={this.state.profileData.posts[1].imageUrl} width={200} height={200} alt={this.state.profileData.posts[1].imageUrl} />\n              </Card>\n              <Card bordered className=\"card-pubs\" onClick={() => this.openPreview(2)}>\n                <img src={this.state.profileData.posts[2].imageUrl} width={200} height={200} alt={this.state.profileData.posts[2].imageUrl} />\n              </Card>\n            </Col>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}