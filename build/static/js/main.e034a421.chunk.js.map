{"version":3,"sources":["components/MentionsTagsComponent.jsx","components/Modals.jsx","components/Header.jsx","components/Publication.jsx","App.js","serviceWorker.js","index.js"],"names":["MentionsTagsComponent","title","type","value","setValue","onSelect","val","res","substring","length","justify","className","span","placeholder","onChange","prefix","defaultValue","map","hashtag","key","Option","Modals","props","useState","hashtags","setHashtags","mentions","setMentions","description","setDescription","Data","email","setEmail","firstname","setFirstname","lastname","setLastname","phoneNumber","setPhoneNumber","okText","visible","editProfileModal","onOk","message","success","onCancel","setEditProfileModal","id","e","target","editPublicationModal","alert","setEditPublicationModal","Header","profile","profileData","align","sm","xs","bordered","md","size","icon","src","profilePicture","username","date","newDate","Date","getDate","getMonth","getFullYear","formatDate","createdAt","onClick","Publication","preview","setPreview","publication","posts","imageUrl","width","height","alt","footer","grid","gutter","column","dataSource","renderItem","tag","Item","user","App","style","margin","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.e034a421.chunk.js","sourcesContent":["import React from 'react';\nimport { Col, Mentions, Row } from 'antd/es';\n\n\nconst MentionsTagsComponent = ( { title, type, value, setValue }\t) => {\n\n\tconst onSelect = (val) => {\n\t\tconst res = val.substring(0, val.length - 1);\n\t\tsetValue(res);\n\t};\n\n\tconst hashtagsExample = ['THP', 'TheHackingProject', '2020', 'ReactJS'];\n\n\treturn (\n\t\t<Row type=\"flex\" justify=\"center\" className=\"input-container\">\n\t\t\t<Col span={20}>\n\t\t\t\t<b>{title}</b>\n\t\t\t\t{type === 'mentions' && (\n\t\t\t\t\t<Mentions\n\t\t\t\t\t\tplaceholder=\"Add space between users\"\n\t\t\t\t\t\tonChange={(value) => onSelect(value)}\n\t\t\t\t\t>\n\t\t\t\t\t</Mentions>\n\t\t\t\t)}\n\t\t\t\t{type === 'tags' && (\n\t\t\t\t\t<Mentions\n\t\t\t\t\t\tplaceholder=\"input # to write hashtags\"\n\t\t\t\t\t\tprefix=\"#\"\n\t\t\t\t\t\tdefaultValue={value || '#'}\n\t\t\t\t\t\tonChange={(value) => onSelect(value)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{hashtagsExample.map((hashtag, key) => (\n\t\t\t\t\t\t\t<Mentions.Option key={key} value={hashtag}>{`#${hashtag}`}</Mentions.Option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Mentions>\n\t\t\t\t)}\n\t\t\t</Col>\n\t\t</Row>\n\t);\n};\n\nexport default MentionsTagsComponent;","import React, { useState } from 'react';\nimport { Col, Row, Modal, Input, message } from 'antd/es';\nimport MentionsTagsComponent from './MentionsTagsComponent';\nimport Data from '../assets/data.json';\n\n\nconst Modals = ( props ) => {\n  const [hashtags, setHashtags] = useState('Your hashtags here');\n  const [mentions, setMentions] = useState('Your mentions here');\n  const [description, setDescription] = useState('Your description here');\n  const [email, setEmail] = useState(Data.email);\n  const [firstname, setFirstname] = useState(Data.firstname);\n  const [lastname, setLastname] = useState(Data.lastname);\n  const [phoneNumber, setPhoneNumber] = useState(Data.phoneNumber);\n\n  const uploadPublication = () => {\n    alert(\"J'upload une image avec la description : \" + description + \" et les hashtags \" + hashtags + \" et les mentions \" + mentions);\n  }\n\n  const updateHashtags = (value) => {\n    setHashtags(value);\n  }\n\n  const updateMentions = (value) => {\n    setMentions(value);\n  }\n\n  const updateProfile = () => {\n    message.success('Profile well updated', 3);\n  }\n\n  return (\n    <>\n      <Modal title=\"Edit your profile\" okText=\"Update\" visible={props.editProfileModal} onOk={updateProfile} onCancel={() => props.setEditProfileModal(false)}>\n        <Row type=\"flex\" justify=\"center\" className=\"input-container\">\n          <Col span={20}>\n            <b>EMail</b>\n            <Input id=\"email\" type=\"text\" value={email} onChange={(e) => setEmail(e.target.value)} />\n          </Col>\n        </Row>\n        <Row type=\"flex\" justify=\"center\" className=\"input-container\">\n          <Col span={20}>\n            <b>Firstname</b>\n            <Input id=\"firstname\" type=\"text\" value={firstname} onChange={(e) => setFirstname(e.target.value)} />\n          </Col>\n        </Row>\n        <Row type=\"flex\" justify=\"center\" className=\"input-container\">\n          <Col span={20}>\n            <b>Lastname</b>\n            <Input id=\"lastname\" type=\"text\" value={lastname} onChange={(e) => setLastname(e.target.value)} />\n          </Col>\n        </Row>\n        <Row type=\"flex\" justify=\"center\" className=\"input-container\">\n          <Col span={20}>\n            <b>Phone number</b>\n            <Input id=\"email\" type=\"text\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} />\n          </Col>\n        </Row>\n      </Modal>\n\n      <Modal title=\"Upload a publication\" okText=\"Upload\" visible={props.editPublicationModal} onOk={uploadPublication} onCancel={() => props.setEditPublicationModal(false)}>\n        <Row type=\"flex\" justify=\"center\" className=\"input-container\">\n          <Col span={20}>\n            <b>Description:</b>\n            <Input id=\"description\" title=\"Description\" type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\n          </Col>\n        </Row>\n        <MentionsTagsComponent type=\"mentions\" value={mentions} title=\"Mention a user\" setValue={updateMentions} />\n        <MentionsTagsComponent type=\"tags\" value={hashtags} title=\"Hashtags\" setValue={updateHashtags} />\n      </Modal>\n    </>\n  );\n};\n\n\nexport default Modals;","import React, { useState } from 'react';\nimport Modals from './Modals';\nimport { Avatar, Button, Card, Col, Icon, Row } from 'antd/es';\nimport Data from '../assets/data.json';\n\n\nconst Header = () => {\n  const [editProfileModal, setEditProfileModal] = useState(false);\n  const [editPublicationModal, setEditPublicationModal] = useState(false);\n\n  const profile = Data.profileData;\n\n  const formatDate = (date) => {\n    const newDate = new Date(date);\n    return `${newDate.getDate()}/${newDate.getMonth() + 1}/${newDate.getFullYear()}`;\n  }\n\n  return (\n    <>\n      <Row type=\"flex\" align=\"middle\" justify=\"center\">\n        <Col sm={16} xs={24}>\n          <Card bordered>\n            <Row type=\"flex\" align=\"middle\" justify=\"center\">\n              <Col md={14} sm={16} xs={24}>\n                <Row type=\"flex\" justify=\"space-between\">\n                  <Col span={10} className=\"text-center\">\n                    <Avatar size={100} icon=\"user\" className=\"profil-pic\" src={profile.profilePicture} />\n                    <h3>{`${profile.firstname} ${profile.lastname}`}</h3>\n                  </Col>\n                  <Col span={10}>\n                    <p>\n                      <Icon type=\"user\" className=\"p-icon\" />\n                      {profile.username}\n                    </p>\n                    <p>\n                      <Icon type=\"mail\" className=\"p-icon\" />\n                      {profile.email}\n                    </p>\n                    <p>\n                      <Icon type=\"phone\" className=\"p-icon\" />\n                      {profile.phoneNumber}\n                    </p>\n                    <p>\n                      <Icon type=\"calendar\" className=\"p-icon\" />\n                      {formatDate(profile.createdAt)}\n                    </p>\n                  </Col>\n                </Row>\n              </Col>\n              <Col md={10} sm={16} xs={24} className=\"text-center\">\n                <Button type=\"ghost\" icon=\"setting\" onClick={ () => setEditProfileModal(true) }>Edit profile</Button>\n                <br />\n                <br />\n                <Button type=\"ghost\" icon=\"upload\" onClick={ () => setEditPublicationModal(true) }>Upload a publication</Button>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n      </Row>\n\n      <Modals \n        editProfileModal={editProfileModal}\n        setEditProfileModal={setEditProfileModal}\n        editPublicationModal={editPublicationModal}\n        setEditPublicationModal={setEditPublicationModal}\n      />\n    </>\n  );  \n};  \n\nexport default Header;","import React, { useState } from 'react';\nimport Data from '../assets/data.json';\nimport { Modal, List, Tag, Button, Card, Col, Row } from 'antd/es';\n\nconst Publication = ( {id} ) => {\n  const [preview, setPreview] = useState(false);\n  const publication = Data.profileData.posts[id];\n\n  const deletePublication = () => alert(\"Je supprime la publcation avec l'id : \" + publication.id);\n  const updatePublication = () => alert(\"J'update la publcation avec l'id : \" + publication.id);\n\n  return (\n    <>\n      <Card bordered className=\"card-pubs\" onClick={() => setPreview(true)}>\n        <img src={publication.imageUrl} width={200} height={200} alt={publication.imageUrl} />\n      </Card>\n\n      <Modal \n        width={520} \n        visible={preview} \n        onCancel={ () => setPreview(false) }\n        footer={\n          <Row type=\"flex\">\n            <Col span={12} className=\"text-center\">\n              <Button type=\"ghost\" icon=\"edit\" onClick={updatePublication}>Edit</Button>\n            </Col>\n            <Col span={12} className=\"text-center\">\n              <Button type=\"danger\" icon=\"delete\" onClick={deletePublication}>Delete</Button>\n            </Col>\n          </Row>\n        }\n      >\n        <Row type=\"flex\" align=\"middle\">\n          <Col xs={24} md={12} className=\"text-center\">\n            <img src={publication.imageUrl} width={200} height={200} alt={publication.description} />\n          </Col>\n          <Col xs={24} md={12}>\n            <div>\n              <b>Description: </b>\n              <p>{publication.description}</p>\n            </div>\n            <div>\n              <b>Hashtag:</b>\n              <List\n                grid={{ gutter: 16, column: 2 }}\n                dataSource={publication.hashtags}\n                renderItem={(tag) => (\n                  <List.Item>\n                    <Tag>{`${tag}`}</Tag>\n                  </List.Item>\n                )}\n              />\n            </div>\n            <div>\n              <b>Mention:</b>\n              <List\n                grid={{ gutter: 16, column: 2 }}\n                dataSource={publication.mentions}\n                renderItem={(user) => (\n                  <List.Item>\n                    <Tag>{`@${user}`}</Tag>\n                  </List.Item>\n                )}\n              />\n            </div>\n          </Col>\n        </Row>\n      </Modal>\n    </>\n  );\n};\n\nexport default Publication;","// Kata written by Matthieu BRAULT for the next-react formation from TheHackingProject\nimport React from 'react';\nimport { Col, Icon, Row } from 'antd/es';\nimport Header from './components/Header';\nimport Publication from './components/Publication';\n\n\nconst App = () => {\n\n  return (\n    <div style={{ margin: 50 }}>\n      <Header />      \n\n      <Row type=\"flex\" justify=\"center\">\n        <Col sm={18} xs={24}>\n          <Col span={24} className=\"container text-center\">\n            <h2>\n              <Icon type=\"save\" />\n              <span className=\"span-icon\">Publications</span>\n            </h2>\n            <Publication id={0}/>\n            <Publication id={1}/>\n            <Publication id={2}/>\n          </Col>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}